{"version":3,"sources":["components/menu-btn.jsx","components/left-menu.jsx","components/ice-lynx-logo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Menubtn","React","isChecked","setIsChecked","div","style","width","height","borderRadius","margin","backgroundColor","variants","checked","scale","background","unchecked","animate","transition","duration","type","onClick","d","fill","ToggleBox","title","children","useState","isOpened","setIsOpened","className","wasOpened","IceLynxLogo","checkVariants","pathLength","useMotionValue","opacity","useTransform","class","padding","onHoverStart","onHoverEnd","path","strokeWidth","stroke","strokeLinecap","App","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac04a9ff.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { motion} from \"framer-motion\";\n\nexport function Menubtn () {\n  const boxVariants = {\n    checked: { scale: 1, background: \"rgba(0,100,255,0)\" },\n    unchecked: { scale: 1, background: \"rgba(255,255,255,0)\", width: 'auto' },\n  };\n\n  const [isChecked, setIsChecked] = React.useState(true);\n \n\n  return (\n    <motion.div\n      style={{\n        width: 50,\n        height: 35,\n        borderRadius: 0,\n        margin: 0,\n        backgroundColor: \"rgba(255,255,255,1)\",\n      }}\n      variants={boxVariants}\n      animate={isChecked ? \"checked\" : \"unchecked\"}\n      transition={{ duration: 0.2, type: \"tween\" }}\n      onClick={() => setIsChecked(!isChecked)}\n    >\n      <svg width=\"100\" height=\"100\" scale=\"1\">\n        <path d=\"m 5 5 l 40 0 l 0 5 l -40 0\" fill=\"rgba(233,46,159,1)\" />\n        <path d=\"m 5 15 l 40 0 l 0 5 l -40 0\" fill=\"rgba(253,92,98,1)\" />\n        <path d=\"m 5 25 l 40 0 l 0 5 l -40 0\" fill=\"rgba(251,158,49,1)\" />\n      </svg>\n    </motion.div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Menubtn } from \"./menu-btn.jsx\";\n\nexport function ToggleBox({ title, children }) {\n  const [isOpened, setIsOpened] = useState(false);\n\n  function toggle() {\n    setIsOpened((wasOpened) => !wasOpened);\n  }\n\n  return (\n    <div className=\"left-menu\">\n      <div className=\"menudiv\" onClick={toggle}>\n        <Menubtn />\n      </div>\n      {isOpened && <div className=\"menuContent\">Menu item 1</div>}\n      {isOpened && <div className=\"menuContent\">Menu item 2</div>}\n      {isOpened && <div className=\"menuContent\">Menu item 3</div>}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { motion, useMotionValue, useTransform } from \"framer-motion\";\n\nexport function IceLynxLogo() {\n  const boxVariants = {\n    checked: { scale: 1, background: \"rgba(0,100,255,0)\" },\n    unchecked: { scale: 1, background: \"rgba(0,100,255,0)\" },\n  };\n\n  const checkVariants = {\n    checked: { pathLength: 0 },\n    unchecked: { pathLength: 1 },\n  };\n\n  const [isChecked, setIsChecked] = React.useState(true);\n  const pathLength = useMotionValue(0);\n  const opacity = useTransform(pathLength, [0.05, 0.15], [0, 1]);\n\n  return (\n    <motion.div\n      class=\"logo\"\n      style={{\n        width: 90,\n        height: 115,\n        borderRadius: 0,\n        padding: 0,\n        backgroundColor: \"rgba(0,100,255,0)\",\n      }}\n      variants={boxVariants}\n      animate={isChecked ? \"checked\" : \"unchecked\"}\n      transition={{ duration: 0.1, type: \"tween\" }}\n      onHoverStart={() => setIsChecked(!isChecked)}\n      onHoverEnd={() => setIsChecked(!isChecked)}\n    >\n      <svg width=\"90\" height=\"115\">\n        <path d=\"M 25 60 l 5 0 l 10 10 l -5 0 l -10 -5\" fill=\"#b4eafa\" />\n        <path d=\"M 65 60 l -5 0 l -10 10 l 5 0 l 10 -5\" fill=\"#b4eafa\" />\n        <path d=\"M 45 80 l 5 5 l -2.5 5 l -5 0 l -2.5 -5\" fill=\"#b4eafa\" />\n        <path\n          d=\"M 45 40 l -15 -5 l -15 -15 l -5 -15 l -5 -5 l 5 15 l -5 15 l 10 15 l -10 15 l -5 20 l 10 -5 l 10 40 l 5 -25 l 5 -5 l 10 10 l 10 0 l 10 -10 l 5 5 l 5 25 l 10 -40 l 10 5 l -5 -20 l -10 -15 l 10 -15 l -5 -15 l 5 -15 l -5 5 l -5 15 l -15 15 l -15 5\"\n          fill=\"rgba(0,0,0,0.2)\"\n        />\n        <svg width=\"90\" height=\"115\" scale=\"1\">\n          <motion.path\n            d=\"m 5 0 l 5 5 l 5 15 l 15 15 l 15 5\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"#b4eafa\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n          />\n          <motion.path\n            d=\"m 85 0 l -5 5 l -5 15 l -15 15 l -15 5\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"#b4eafa\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n          />\n          <motion.path\n            d=\"M 5 0 l 5 15 l -5 15 l 10 15 l -10 15 l -5 20 l 10 -5 l 10 40 l 5 -25 l 5 -5\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"#b4eafa\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n          />\n          <motion.path\n            d=\"M 85 0 l -5 15 l 5 15 l -10 15 l 10 15 l 5 20 l -10 -5 l -10 40 l -5 -25 l -5 -5\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"#b4eafa\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n          />\n          <motion.path\n            d=\"M 30 85 l 10 10 l 5 0\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"#b4eafa\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n          />\n          <motion.path\n            d=\"M 60 85 l -10 10 l -5 0\"\n            fill=\"transparent\"\n            strokeWidth=\"1\"\n            stroke=\"#b4eafa\"\n            strokeLinecap=\"round\"\n            variants={checkVariants}\n            style={{ pathLength: pathLength, opacity: opacity }}\n          />\n        </svg>\n      </svg>\n    </motion.div>\n  );\n}\n","import \"./App.css\";\nimport { ToggleBox } from \"./components/left-menu.jsx\";\nimport { IceLynxLogo } from \"./components/ice-lynx-logo.jsx\";\n\nfunction App() {\n  return (\n    <div class=\"wrapper\">\n      <div class=\"header\">Header</div>\n      <div class=\"body\">\n        <ToggleBox />\n        <div class=\"content\">Content goes here.</div>\n      </div>\n      <div class=\"footer\">\n        <IceLynxLogo />\n        Ice Lynx Â© {new Date().getFullYear()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}